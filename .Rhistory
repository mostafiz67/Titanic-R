test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 5, maxdepth = 3))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 100, maxdepth = 3))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~ Pclass + Sex + Age, data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_1)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 100, maxdepth = 3))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 250, maxdepth = 3))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 2, maxdepth = 3))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 2, maxdepth = 5))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 25, maxdepth = 5))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~., data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_1)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_2 <- rpart(Survived ~.,
data=train, method="class",
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~.,  data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, test, type = "class")
DT1_prediction_ADA_1 <- data.frame(PassengerId = test$PassengerId, Survived = prediction_DT_ADA_1)
write.csv(DT1_prediction_ADA_1, file = "/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Prediction_Output/prediction_ADA_1.csv", row.names = FALSE)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~.,  data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, test, type = "class")
View(decesion_tree_ADA_1)
View(test)
View(train)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class", parms=list(split='gini'),
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_2)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~ Pclass + Sex + Age, parms=list(split='gini'),
data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, train, type = "class")
confusionMatrix(as.factor(train$Survived), prediction_DT_ADA_1)
decesion_tree_ADA_1 <- rpart(Survived ~.,  data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, test, type = "class")
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~.,  data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, test, type = "class")
View(train)
train$Name <- NULL
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~.,  data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, test, type = "class")
data(iris)
as.facjj
data(iris)
decision_tree1 <- rpart(Species~., iris, method="class", parms=list(split='gini'),)
fancyRpartPlot(decesion_tree_ADA_1)
fancyRpartPlot(decision_tree1)
predict_1 <- predict(decision_tree1, iris, type="class")
confusionMatrix(predict_1, iris$Species)
decision_tree2 <- rpart(Species~., iris, method="class", parms=list(split='gini')
control = rpart.control(maxdepth = 3, minsplit = 50))
decision_tree2 <- rpart(Species~., iris, method="class", parms=list(split='gini'),
control = rpart.control(maxdepth = 3, minsplit = 50))
fancyRpartPlot(decision_tree2)
predict_2 <- predict(decision_tree2, iris, type="class")
confusionMatrix(predict_2, iris$Species)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
View(train)
train$Name <- NULL
train$Ticket <- NULL
train$Cabin <- NULL
train <- na.omit(train)
train$Pclass <- as.factor(train$Pclass)
View(train)
train$Survived <- as.factor(train$Survived)
fit <- rpart(survived~., data = train, method = 'class')
fit <- rpart(Survived~., data = train, method = 'class')
rpart.plot(fit, extra = 106)
rpart.plot(fit, extra = 101)
rpart.plot(fit, extra = 50)
rpart.plot(fit, extra = 100)
rpart.plot(fit, extra = 1000)
rpart.plot(fit, extra = 800)
rpart.plot(fit, extra = 150)
rpart.plot(fit, extra = 101)
path <- 'https://raw.githubusercontent.com/guru99-edu/R-Programming/master/titanic_data.csv'
write.csv(path, file = "/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/full_dataset.csv", row.names = FALSE)
full_data <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/full_dataset.csv")
View(full_data)
path <- 'https://raw.githubusercontent.com/guru99-edu/R-Programming/master/titanic_data.csv'
path <- read.csv(path)
write.csv(path, file = "/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/full_dataset.csv", row.names = FALSE)
full_data <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/full_dataset.csv")
library(dplyr)
# Cleaning the dataset
full_data_clean <- select(full_data, -c(home.dest, cabin, name, X, ticket))
# Cleaning the dataset
full_data_clean <- select(full_data, -c(home.dest, cabin, name, x, ticket))
full_data_clean <- na.omit(full_data_clean)
full_data_clean <- na.omit(full_data_clean)
View(full_data_clean)
full_data_clean$Pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$Survived <- as.factor(full_data_clean$Survived)
View(full_data_clean)
full_data_clean$pclass <- as.factor(full_data_clean$pclass)
full_data_clean$survived <- as.factor(full_data_clean$survived)
na.omit(full_data_clean)
View(full_data_clean)
library(caret)
partition <- createDataPartition(full_data_clean$survived, p = 0.8, list=FALSE)
train_data <- full_data_clean[partition]
train_data <- full_data_clean[partition,]
test_data <- full_data_clean[-partition,]
prop.table(table(train_data$survived))
prop.table(table(test_data$survived))
decision_tree_1 <- rpart(Survived~., data = train_data, method = 'class')
decision_tree_1 <- rpart(survived~., data = train_data, method = 'class')
rpart.plot(decision_tree_1, extra = 101)
View(train_data)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
taitanic_data <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
View(taitanic_data)
# Cleaning the dataset
full_data_clean <- select(taitanic_data, -c(Parch, Cabin, Name, PassengerID, Ticket))
# Cleaning the dataset
full_data_clean <- select(taitanic_data, -c(Parch, Cabin, Name, PassengerId, Ticket))
full_data_clean <- na.omit(full_data_clean)
full_data_clean$pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$survived <- as.factor(full_data_clean$Survived)
partition <- createDataPartition(full_data_clean$survived, p = 0.8, list=FALSE)
train_data <- full_data_clean[partition,]
test_data <- full_data_clean[-partition,]
prop.table(table(train_data$survived))
prop.table(table(test_data$survived))
decision_tree_1 <- rpart(Survived~., data = train_data, method = 'class')
fancyRpartPlot(decision_tree_1, tweak=1.4)
fancyRpartPlot(decision_tree_1, tweak=1)
prediction_1 <- predict(decision_tree_1, test_data, type='class')
table_mat <- table(test_data$Survived, prediction_1)
table_mat
taitanic_data <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
# Cleaning the dataset
full_data_clean <- select(taitanic_data, -c(Parch, Cabin, Name, PassengerId, Ticket))
full_data_clean <- na.omit(full_data_clean)
full_data_clean$pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$survived <- as.factor(full_data_clean$Survived)
partition <- createDataPartition(full_data_clean$survived, p = 0.8, list=FALSE)
train_data <- full_data_clean[partition,]
test_data <- full_data_clean[-partition,]
test_data_survived <- test_data$Survived
test_data$Survived <-NULL
View(full_data_clean)
prop.table(table(train_data$Survived))
prop.table(table(test_data$Survived))
decision_tree_1 <- rpart(Survived~., data = train_data, method = 'class')
fancyRpartPlot(decision_tree_1, tweak=1)
prediction_1 <- predict(decision_tree_1, test_data, type='class')
table_mat <- table(test_data_survived, prediction_1)
table_mat
accuracy_Test <- sum(diag(table_mat)) / sum(table_mat)
accuracy_Test
print(paste('Accuracy for test', accuracy_Test))
taitanic_data <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
# Cleaning the dataset
full_data_clean <- select(taitanic_data, -c(Parch, Cabin, Name, PassengerId, Ticket))
full_data_clean <- na.omit(full_data_clean)
full_data_clean$pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$survived <- as.factor(full_data_clean$Survived)
partition <- createDataPartition(full_data_clean$survived, p = 0.8, list=FALSE)
train_data <- full_data_clean[partition,]
test_data <- full_data_clean[-partition,]
test_data_survived <- test_data$Survived
decision_tree_2 <- rpart(Survived~., data = train_data, method = 'class',
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decision_tree_2, tweak=1)
prediction_2 <- predict(decision_tree_2, test_data, type='class')
table_mat <- table(test_data_survived, prediction_1)
table_mat <- table(test_data_survived, prediction_2)
table_mat
taitanic_data <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
# Cleaning the dataset
full_data_clean <- select(taitanic_data, -c(Parch, Cabin, Name, PassengerId, Ticket))
full_data_clean <- na.omit(full_data_clean)
full_data_clean$pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$survived <- as.factor(full_data_clean$Survived)
partition <- createDataPartition(full_data_clean$survived, p = 0.7, list=FALSE)
train_data <- full_data_clean[partition,]
test_data <- full_data_clean[-partition,]
test_data_survived <- test_data$Survived
prop.table(table(train_data$Survived))
prop.table(table(test_data$Survived))
test_data$Survived <-NULL
decision_tree_2 <- rpart(Survived~., data = train_data, method = 'class',
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decision_tree_2, tweak=1)
prediction_2 <- predict(decision_tree_2, test_data, type='class')
table_mat <- table(test_data_survived, prediction_2)
table_mat
taitanic_data <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
# Cleaning the dataset
full_data_clean <- select(taitanic_data, -c(Parch, Cabin, Name))
full_data_clean <- na.omit(full_data_clean)
full_data_clean$pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$survived <- as.factor(full_data_clean$Survived)
partition <- createDataPartition(full_data_clean$survived, p = 0.7, list=FALSE)
train_data <- full_data_clean[partition,]
test_data <- full_data_clean[-partition,]
test_data_survived <- test_data$Survived
prop.table(table(train_data$Survived))
prop.table(table(test_data$Survived))
test_data$Survived <-NULL
decision_tree_2 <- rpart(Survived~., data = train_data, method = 'class',
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decision_tree_2, tweak=1)
prediction_2 <- predict(decision_tree_2, test_data, type='class')
table_mat <- table(test_data_survived, prediction_2)
table_mat
data(Taitanic)
data("Titanic")
data("Titanic")
library(titanic)
library('titanic')
install.packages(titanic)
install.packages("titanic")
library('titanic')
train <- titanic_train
full_data_clean <- select(train, -c(Parch, Cabin, Name))
full_data_clean <- na.omit(full_data_clean)
full_data_clean$pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$survived <- as.factor(full_data_clean$Survived)
decision_tree_2 <- rpart(Survived~., data = full_data_clean, method = 'class',
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decision_tree_2, tweak=1)
train <- titanic_train
# Cleaning the dataset
full_data_clean <- select(train, -c(Parch, Cabin, Name))
View(full_data_clean)
full_data_clean <- na.omit(full_data_clean)
full_data_clean$pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$survived <- as.factor(full_data_clean$Survived)
decision_tree_2 <- rpart(Survived~., data = full_data_clean, method = 'class',
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decision_tree_2, tweak=1)
test <- titanic_test
prediction_2 <- predict(decision_tree_2, test, type='class')
View(test)
train <- titanic_train
test <- titanic_test
# Cleaning the dataset
full_data_clean <- select(train, -c(Parch, Cabin, Name))
full_data_clean <- na.omit(full_data_clean)
full_data_test_clean <- select(test, -c(Parch, Cabin, Name))
full_data_test_clean <- na.omit(full_data_test_clean)
decision_tree_2 <- rpart(Survived~., data = full_data_clean, method = 'class',
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decision_tree_2, tweak=1)
full_data_clean$pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$survived <- as.factor(full_data_clean$Survived)
decision_tree_2 <- rpart(Survived~., data = full_data_clean, method = 'class',
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decision_tree_2, tweak=1)
full_data_test_clean$pclass <- as.factor(full_data_test_clean$Pclass)
full_data_test_clean$survived <- as.factor(full_data_test_clean$Survived)
train <- titanic_train
test <- titanic_test
full_data_clean <- select(train, -c(Parch, Cabin, Name))
full_data_clean <- na.omit(full_data_clean)
full_data_test_clean <- select(test, -c(Parch, Cabin, Name))
full_data_test_clean <- na.omit(full_data_test_clean)
full_data_clean$Pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$Survived <- as.factor(full_data_clean$Survived)
full_data_test_clean$Pclass <- as.factor(full_data_test_clean$Pclass)
full_data_test_clean$Survived <- as.factor(full_data_test_clean$Survived)
full_data_test_clean$Pclass <- as.factor(full_data_test_clean$Pclass)
decision_tree_2 <- rpart(Survived~., data = full_data_clean, method = 'class',
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decision_tree_2, tweak=1)
train <- titanic_train
test <- titanic_test
# Cleaning the dataset
full_data_clean <- select(train, -c(Parch, Cabin, Name))
full_data_clean <- na.omit(full_data_clean)
full_data_test_clean <- select(test, -c(Parch, Cabin, Name))
full_data_test_clean <- na.omit(full_data_test_clean)
full_data_clean$Pclass <- as.factor(full_data_clean$Pclass)
full_data_clean$Survived <- as.factor(full_data_clean$Survived)
full_data_test_clean$Pclass <- as.factor(full_data_test_clean$Pclass)
decision_tree_2 <- rpart(Survived~., data = full_data_clean, method = 'class',
control = rpart.control(minsplit = 50, maxdepth = 5))
fancyRpartPlot(decision_tree_2, tweak=1)
library(dplyr)
library(caret)
full_data <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/full_dataset.csv")
# Cleaning the dataset
full_data_clean <- select(full_data, -c(home.dest, cabin, name, x, ticket))
full_data_clean <- na.omit(full_data_clean)
full_data_clean$pclass <- as.factor(full_data_clean$pclass)
full_data_clean$survived <- as.factor(full_data_clean$survived)
partition <- createDataPartition(full_data_clean$survived, p = 0.8, list=FALSE)
train_data <- full_data_clean[partition,]
test_data <- full_data_clean[-partition,]
prop.table(table(train_data$survived))
prop.table(table(test_data$survived))
decision_tree_1 <- rpart(survived~., data = train_data, method = 'class')
rpart.plot(decision_tree_1, extra = 101)
library(dplyr)
library(caret)
full_data <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/full_dataset.csv")
full_data_clean <- full_data %>%
-c(home.dest, cabin, name, x, ticket) %>%
mutate(pclass = factor(pclass, levels = c(1, 2, 3), labels = c('Upper', 'Middle', 'Lower')),
survived = factor(survived, levels = c(0, 1), labels = c('No', 'Yes'))) % > %
na.omit()
full_data_clean <- full_data %>%
-c(home.dest, cabin, name, x, ticket) %>%
mutate(pclass = factor(pclass, levels = c(1, 2, 3), labels = c('Upper', 'Middle', 'Lower')),
survived = factor(survived, levels = c(0, 1), labels = c('No', 'Yes'))) %>%
na.omit()
View(full_data)
View(full_data)
full_data_clean <- full_data %>%
select(-c(home.dest, cabin, name, x, ticket)) %>%
mutate(pclass = factor(pclass, levels = c(1, 2, 3), labels = c('Upper', 'Middle', 'Lower')),
survived = factor(survived, levels = c(0, 1), labels = c('No', 'Yes'))) %>%
na.omit()
partition <- createDataPartition(full_data_clean$survived, p = 0.8, list=FALSE)
train_data <- full_data_clean[partition,]
test_data <- full_data_clean[-partition,]
prop.table(table(train_data$survived))
prop.table(table(test_data$survived))
decision_tree_1 <- rpart(survived~., data = train_data, method = 'class')
rpart.plot(decision_tree_1, extra = 101)
View(train_data)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
train <- select(train, -c(home.dest, cabin, name, x, ticket))
train <- select(train, -c(Cabin, Name,Ticket))
decesion_tree_ADA_1 <- rpart(Survived ~.,  data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, test, type = "class")
DT1_prediction_ADA_1 <- data.frame(PassengerId = test$PassengerId, Survived = prediction_DT_ADA_1)
write.csv(DT1_prediction_ADA_1, file = "/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Prediction_Output/prediction_ADA_1.csv", row.names = FALSE)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
train <- select(train, -c(Cabin, Name,Ticket))
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 200, maxdepth = 3))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, test, type = "class")
DT1_prediction_ADA_2 <- data.frame(PassengerId = test$PassengerId, Survived = prediction_DT_ADA_2)
write.csv(DT1_prediction_ADA_2, file = "/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Prediction_Output/prediction_ADA_2.csv", row.names = FALSE)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
train <- select(train, -c(Cabin, Name,Ticket))
decesion_tree_ADA_2 <- rpart(Survived ~  Pclass + Sex + Age,
data=train, method="class",
control = rpart.control(minsplit = 200, maxdepth = 7))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
train <- select(train, -c(Cabin, Name,Ticket))
decesion_tree_ADA_2 <- rpart(Survived ~.,
data=train, method="class",
control = rpart.control(minsplit = 200, maxdepth = 7))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
decesion_tree_ADA_2 <- rpart(Survived ~.,
data=train, method="class",
control = rpart.control(minsplit = 100, maxdepth = 7))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.8) # Plotting the tree
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, test, type = "class")
DT1_prediction_ADA_2 <- data.frame(PassengerId = test$PassengerId, Survived = prediction_DT_ADA_2)
write.csv(DT1_prediction_ADA_2, file = "/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Prediction_Output/prediction_ADA_2.csv", row.names = FALSE)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
train <- select(train, -c(Cabin, Name,Ticket))
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~ Age + Sex + PClass,  data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~ Age + Sex + Pclass,  data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
prediction_DT_ADA_1 <- predict(decesion_tree_ADA_1, test, type = "class")
DT1_prediction_ADA_1 <- data.frame(PassengerId = test$PassengerId, Survived = prediction_DT_ADA_1)
write.csv(DT1_prediction_ADA_1, file = "/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Prediction_Output/prediction_ADA_1.csv", row.names = FALSE)
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
train <- select(train, -c(Cabin, Name,Ticket))
decesion_tree_ADA_2 <- rpart(Survived ~ Age + Sex + Pclass,
data=train, method="class",
control = rpart.control(minsplit = 200, maxdepth = 3))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.4) # Plotting the tree
# Predicting based on the DT Using predict function
prediction_DT_ADA_2 <- predict(decesion_tree_ADA_2, test, type = "class")
DT1_prediction_ADA_2 <- data.frame(PassengerId = test$PassengerId, Survived = prediction_DT_ADA_2)
write.csv(DT1_prediction_ADA_2, file = "/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Prediction_Output/prediction_ADA_2.csv", row.names = FALSE)
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
train <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/train.csv")
test <- read.csv("/home/mostafiz/Dropbox/MSc/Course_Work/Machine_Learning/Assignment_1/Titanic/Dataset/test.csv")
train <- select(train, -c(Cabin, Name,Ticket))
# Building Decision tree based on the 3 features
decesion_tree_ADA_1 <- rpart(Survived ~ Age + Sex + Pclass,  data=train, method="class")
fancyRpartPlot(decesion_tree_ADA_1, tweak=1.4) # Plotting the tree
decesion_tree_ADA_2 <- rpart(Survived ~ Age + Sex + Pclass,
data=train, method="class",
control = rpart.control(minsplit = 200, maxdepth = 3))
fancyRpartPlot(decesion_tree_ADA_2, tweak=1.4) # Plotting the tree
